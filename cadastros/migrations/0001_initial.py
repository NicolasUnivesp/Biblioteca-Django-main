# Generated by Django 3.2.9 on 2022-05-21 23:20

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Autor',
            fields=[
                ('autorID', models.BigAutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(help_text='Informe o nome do autor', max_length=100, verbose_name='Nome')),
                ('sobrenome', models.CharField(help_text='Informe o sobrenome do autor', max_length=100, verbose_name='Sobrenome')),
                ('dataNascimento', models.DateField(blank=True, help_text='Informe a data de nascimento do autor', null=True, verbose_name='Data de Nascimento')),
                ('dataFalecimento', models.DateField(blank=True, null=True, verbose_name='Data de Falecimento')),
                ('is_active', models.BooleanField(default=True, help_text='Marque para Ativar/Desmarque para Desativar o autor', verbose_name='Ativo')),
                ('createdAt', models.DateTimeField(auto_now=True, verbose_name='Data de Criação')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Data de Modificação')),
            ],
            options={
                'db_table': 'Autor',
                'ordering': ['sobrenome', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Genero',
            fields=[
                ('generoID', models.BigAutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(help_text='Informe um gênero de livro (exemplo. Ficção, Tecnologia)', max_length=200, unique=True, verbose_name='Nome')),
                ('descricao', models.TextField(help_text='Digite uma descrição do gênero', verbose_name='Descrição')),
                ('is_active', models.BooleanField(default=True, help_text='Marque para Ativar/Desmarque para Desativar o gênero', verbose_name='Ativo')),
                ('createdAt', models.DateTimeField(auto_now=True, verbose_name='Data de Criação')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Data de Modificação')),
            ],
            options={
                'db_table': 'Genero',
            },
        ),
        migrations.CreateModel(
            name='Idioma',
            fields=[
                ('idiomaID', models.BigAutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(help_text='Informe o idioma do livro (exemplo. Inglês, Português etc.)', max_length=100, unique=True, verbose_name='Nome')),
                ('is_active', models.BooleanField(default=True, help_text='Marque para Ativar/Desmarque para Desativar o idioma', verbose_name='Ativo')),
                ('createdAt', models.DateTimeField(auto_now=True, verbose_name='Data de Criação')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Data de Modificação')),
            ],
            options={
                'db_table': 'Idioma',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('usuarioID', models.BigAutoField(primary_key=True, serialize=False)),
                ('rg', models.BigIntegerField(unique=True, verbose_name='RG')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('sexo', models.CharField(choices=[['F', 'Feminino'], ['M', 'Masculino'], ['N', 'Nenhuma das opções']], max_length=1, null=True, verbose_name='Sexo')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone')),
                ('celular', models.CharField(blank=True, max_length=15, null=True, verbose_name='Celular')),
                ('email1', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Email Principal')),
                ('email2', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Email Alternativo')),
                ('cep', models.CharField(max_length=9, verbose_name='C.E.P.')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço')),
                ('numero', models.CharField(max_length=6, verbose_name='Número')),
                ('bairro', models.CharField(max_length=100, verbose_name='Bairro')),
                ('municipio', models.CharField(max_length=50, verbose_name='Município')),
                ('estado', models.CharField(choices=[['AC', 'Acre'], ['AL', 'Alagoas'], ['AP', 'Amapá'], ['AM', 'Amazonas'], ['BA', 'Bahia'], ['CE', 'Ceará'], ['DF', 'Distrito Federal'], ['ES', 'Espírito Santo'], ['GO', 'Goiás'], ['MA', 'Maranhão'], ['MT', 'Mato Grosso'], ['MS', 'Mato Grosso do Sul'], ['MG', 'Minas Gerais'], ['PA', 'Pará'], ['PB', 'Paraíba'], ['PR', 'Paraná'], ['PE', 'Pernambuco'], ['PI', 'Piauí'], ['RJ', 'Rio de Janeiro'], ['RN', 'Rio Grande do Norte'], ['RS', 'Rio Grande do Sul'], ['RO', 'Rondônia'], ['RR', 'Roraima'], ['SC', 'Santa Catarina'], ['SP', 'São Paulo'], ['SE', 'Sergipe'], ['TO', 'Tocantins']], max_length=2, verbose_name='UF')),
                ('serie', models.CharField(blank=True, max_length=50, null=True, verbose_name='Série')),
                ('is_active', models.BooleanField(default=True, help_text='Marque para Ativar/Desmarque para Desativar o usuário', verbose_name='Ativo')),
                ('createdAt', models.DateTimeField(auto_now=True, verbose_name='Data de Criação')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Data de Modificação')),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='auth.group', verbose_name='Grupo')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL, verbose_name='Usuário Sistema')),
            ],
            options={
                'db_table': 'Usuario',
            },
        ),
        migrations.CreateModel(
            name='Livro',
            fields=[
                ('livroID', models.BigAutoField(primary_key=True, serialize=False)),
                ('titulo', models.CharField(help_text='Informe o título do Livro', max_length=100, unique=True, verbose_name='Título')),
                ('co_autor', models.CharField(blank=True, help_text='Informe o coautor do livro', max_length=50, verbose_name='COAUTOR')),
                ('sumario', models.TextField(help_text='Informe uma breve descrição do livro', max_length=1000, verbose_name='Sumário')),
                ('isbn', models.CharField(help_text='13 Caracteres no máximo <a href="https://www.isbn-international.org/content/what-isbn">ISBN número</a>', max_length=13, unique=True, verbose_name='ISBN')),
                ('is_active', models.BooleanField(default=True, help_text='Marque para Ativar/Desmarque para Desativar o livro', verbose_name='Ativo')),
                ('createdAt', models.DateTimeField(auto_now=True, verbose_name='Data de Criação')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Data de Modificação')),
                ('emprestado', models.BooleanField(default=False, verbose_name='Livro Emprestado')),
                ('autor', models.ForeignKey(help_text='Selecione um autor para o livro', null=True, on_delete=django.db.models.deletion.SET_NULL, to='cadastros.autor', verbose_name='Autor')),
                ('genero', models.ManyToManyField(help_text='Selecione um gênero para o livro', to='cadastros.Genero', verbose_name='Gênero')),
                ('idioma', models.ForeignKey(help_text='Selecione o idioma do livro', null=True, on_delete=django.db.models.deletion.SET_NULL, to='cadastros.idioma', verbose_name='Idioma')),
                ('usuario', models.ForeignKey(help_text='Selecione um usuário', on_delete=django.db.models.deletion.DO_NOTHING, to='cadastros.usuario', verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Livro',
                'db_table': 'Livro',
                'ordering': ['titulo', 'autor'],
            },
        ),
        migrations.CreateModel(
            name='Emprestimo',
            fields=[
                ('emprestimoID', models.UUIDField(default=uuid.uuid4, help_text='ID particular para esse livro', primary_key=True, serialize=False)),
                ('marca', models.CharField(max_length=200)),
                ('dataEmprestimo', models.DateTimeField(default=datetime.datetime(2022, 5, 21, 20, 20, 55, 150124), help_text='Informe a data de empréstimo do livro', verbose_name='Data do Empréstimo')),
                ('dataDevolucao', models.DateTimeField(blank=True, help_text='Informe a data de devolução do livro', null=True, verbose_name='Data de Devolução')),
                ('avaliacao', models.CharField(blank=True, choices=[('P', 'Péssimo'), ('R', 'Ruim'), ('B', 'Bom'), ('O', 'Ótimo')], help_text='Selecione uma avaliação', max_length=1, null=True, verbose_name='Avaliação')),
                ('status', models.CharField(blank=True, choices=[('m', 'Manutenção'), ('e', 'Emprestado'), ('d', 'Disponível'), ('r', 'Reservado')], default='d', help_text='Livro Disponível', max_length=1)),
                ('livro', models.ForeignKey(help_text='Selecione o livro a emprestar', null=True, on_delete=django.db.models.deletion.RESTRICT, to='cadastros.livro', verbose_name='Livro')),
                ('nomeEmprestador', models.ForeignKey(blank=True, help_text='Selecione o nome do usuário', null=True, on_delete=django.db.models.deletion.SET_NULL, to='cadastros.usuario', verbose_name='Usuário')),
            ],
            options={
                'db_table': 'Emprestimos',
                'ordering': ['dataDevolucao'],
                'permissions': (('Pode Marcar como Devolvido', 'Marcar como Devolvido'),),
            },
        ),
    ]
